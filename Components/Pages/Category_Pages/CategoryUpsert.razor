@page "/category/create"
@page "/category/update/{id:int}"
@using YumBlazor.Repository
@using YumBlazor.Repository.CategoryRepositories
@using YumBlazor.Services.Extensions
@inject ICategoryRepository _categoryRepository
@inject NavigationManager _navigationManager
@inject IJSRuntime _jsRuntime

@if (IsProcessing)
{
    <div class="position-absolute w-75 h-75 d-flex flex-column align-items-center bg-white justify-content-center">
        <img src="/images/loading.gif" alt="yükleniyor" />
    </div>
}

else
{
    <div class="card shadow border-0 m-4">
        <div class="card-header bg-black bg-gradient">
            <div class="row">
                <div class="col-12 text-center">
                    <h2 class="text-white py-2">Kategori @(id > 0 ? "Güncelle" : "Ekle")</h2>
                </div>
            </div>
        </div>
        <div class="card-body p-4">
              <EditForm Model="Category" FormName="CategoryUpsertForm" OnValidSubmit="UpsertCategory">
                <DataAnnotationsValidator></DataAnnotationsValidator>
                    <div class="border p-3 mt-4">
                        <div class="form-floating py-3 col-12">
                            <InputText @bind-Value="Category.Name" class="form-control" id="Name"></InputText>
                            <label for="Name">Kategori Adı</label>
                            <ValidationMessage For="@(() => Category.Name)" class="text-danger" />
                        </div>
                        <div class="row mt-3">
                            <div class="col-6 col-md-3">
                            <button type="submit" class="btn btn-success form-control" disabled="@IsProcessing"><i class="bi bi-floppy2-fill"></i>  @(id > 0 ? "Güncelle" : "Ekle")</button>
                            </div>
                        <div class="col-6 col-md-3">
                            <a href="category" class="btn btn-primary form-control" disabled="@IsProcessing"><i class="bi bi-arrow-bar-left"></i> Kategori Listesine Dön</a>
                        </div>
                        </div>
                    </div>
              </EditForm>
        </div>
    </div>
}


@code {
    [Parameter]
    public int id { get; set; }
    [SupplyParameterFromForm]
    private Category Category { get; set; } = new Category();
    private bool IsProcessing { get; set; } = true;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await LoadCategory();
            IsProcessing = false;
            StateHasChanged();
        }
    }

    private async Task LoadCategory()
    {
        if (id > 0)
        {
            Category = await _categoryRepository.GetAsync(id);

        }
    }

    private async Task UpsertCategory()
    {
        IsProcessing = true;
        if(Category.Id == 0)
        {
            // Kategori Oluştur
            await _categoryRepository.CreateAsync(Category);
            await _jsRuntime.ToastrSuccess("Kategori başarıyla oluşturuldu");
        }
        else
        {
            // Kategori Güncelle
            await _categoryRepository.UpdateAsync(Category);
            await _jsRuntime.ToastrWarning("Kategori Başarıyla Güncellendi");
        }
        IsProcessing = false;
        _navigationManager.NavigateTo("category");
    }
}
