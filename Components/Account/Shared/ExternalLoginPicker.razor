@using Microsoft.AspNetCore.Authentication
@using Microsoft.AspNetCore.Identity
@using YumBlazor.Data

@inject SignInManager<ApplicationUser> SignInManager
@inject IdentityRedirectManager RedirectManager

@if (externalLogins.Length == 0)
{
    <div>
        <p>
            Henüz yapılandırılmış bir harici kimlik doğrulama servisi yok. Bu <a href="https://go.microsoft.com/fwlink/?LinkID=532715">makaleye</a> bakarak, ASP.NET uygulamanızı harici servisler üzerinden giriş desteği verecek şekilde yapılandırabilirsiniz.
        </p>
    </div>
}
else
{
    <div class="d-grid gap-2">
    <form class="form-horizontal" action="Account/PerformExternalLogin" method="post">
            <AntiforgeryToken />
            <input type="hidden" name="ReturnUrl" value="@ReturnUrl" />
            <div class="d-grid gap-2">
                @foreach (var provider in externalLogins)
                {
                    <button type="submit" class="btn btn-outline-dark" name="provider" value="@provider.Name" title="@provider.DisplayName hesabınızı kullanarak giriş yap">@provider.DisplayName</button>
                }
            </div>
    </form>
    </div>
}

@code {
    private AuthenticationScheme[] externalLogins = [];

    [SupplyParameterFromQuery]
    private string? ReturnUrl { get; set; }

    protected override async Task OnInitializedAsync()
    {
        externalLogins = (await SignInManager.GetExternalAuthenticationSchemesAsync()).ToArray();
    }
}
